=== Sitecom WL-173 ===
The Sitecom WL-173 is a 54 Mbit (with turbo mode) wireless broadband router. It's original firmware is based on uClinux (Firmware 1.28) and a Realtek RTL8650B chip at 200 MHz is used. The following pictures were taken from a WL-173 v1 001.

 . attachment:outsideWL173.jpg
=== Opening the WL-173 ===
There are four screws. Two are not hidden. The other screws are located underneath the little rubber feet near the front of the router.

=== The board and components of the WL-173 ===
 . attachment:boardWL173_s.jpg
High resolution pictures upside: [attachment:boardWL173_1.jpg Part1] and [attachment:boardWL173_2.jpg Part2].

Low resolution picure downside: [attachment:boardWL173_down.jpg Down]

 * SoC: Realtek RTL8650B at 200 MHz 

 http://www.realtek.com.tw/products/productsView.aspx?Langid=1&PNid=9&PFid=11&Level=4&Conn=3&ProdID=70
 
 http://www.csie.nctu.edu.tw/~cfliu/work/8650.htm

 {{{
# cat /proc/cpuinfo
system type             : Philips Nino
processor               : 0
cpu model               : R3000 V0.0
BogoMIPS                : 199.06
wait instruction        : no
microsecond timers      : no
tlb_entries             : 16
extra interrupt vector  : no
hardware watchpoint     : no
VCED exceptions         : not available
VCEI exceptions         : not available
 }}}

 * RAM: 2x PSC A2V64S40CTP รก 64Mbit / Data sheet: To link ...
 * ROM: Spansion S29Al016D 16Mbit/70ns / Data sheet: http://www.spansion.com/datasheets/s29al016d_00_a5_e.pdf

=== WL-173 firmware ===
The firmware source code and the toolchain: http://www.sitecom.com/drivers_result.php?groupid=5&productid=528

File format of the official firmware (1.28) from the Sitecom website:

__'''Firmware Header:'''__
||<tablewidth="1012px" tablestyle="text-align: left;">0000:0000 || 59 a0 e8 42 ||"Magical number" ||
|| ... || || ||
|| 0000:0016 || 60 12 || Firmware body checksum 0x60 at offset 0000:0016 and firmware header checksum 0x12 at offset 0000:0017 ||


__'''Kernel block:'''__
||<tablewidth="1055px" tablestyle="text-align: left;"> Header: || || ||
||0000:0018 ||59 a0 e8 42 ||"Magical number" ||
||... || || ||
||0000:002e ||de c7 ||Kernel block body checksum 0xde at offset 0000:002e and kernel block header checksum 0xc7 at offset 0000:002f ||
||Kernel: || || ||
||0000:0030 ||5d 00 00 ||Kernel starts at address  0000:0030 ||
||... || || ||
||000c:251a ||d7 00 00 ||Kernel ends in this file here; 0xd7 is the last byte of the compressed kernel code ||
||... || || ||
||000c:7ffc ||00 00 00  00 || 0x00 filling bytes until 000c:7fff ||


__'''SquashFS:'''__
||<tablewidth="1062px" tablestyle="text-align: left;">000c:8000 ||73 71 73 68 ||SquashFS is starting here 0x73717368 (= "sqsh") ||
||... || || ||
||001a:e050 ||01 f4 00 00 ||SquashFS ends at 001a:e051; 0xf4 is the last byte ... end of file filled with zeros ||


 * Special header with "Magic Number" 0x59a0e842, checksum of following data(kernel and romfs) __ __
 * Next in flashfile is the kernel also with special header and "Magic Byte sequence", checksum of kernel etc
 * Some filling 0x00 bytes follow
 * and after that the SquashFS-LZMA

The special header is generated by the binary "packbin" from the source package.

In this firmware file (1.28) the kernel and squashfs are lzma compressed.
 * Original 1.28 firmware image from Sitecom website: [attachment:Sitecom_WL-173_1.28.bin WL-173 Firmware]
 * Extracted and decompressed kernel image: [attachment:Sitecom_WL-173_1.28.kernel WL-173 Kernel]
 * Extracted SquashFS (LZMA compressed): [attachment:Sitecom_WL-173_1.28.squashfslzma WL-173 SquashFS-LZMA]
 * Uncompressed and "unsquashed" root file system: [attachment:Sitecom_WL-173_1.28_rootfs.tar.gz WL-173 RootFS]

=== Telnet access ===
There is a modified 1.28 firmware with telnet daemon. Telnet is open to WAN and not password protected so do NOT connect to the internet.

Modified firmware image:
 * [attachment:WL-173_128_telnetd_by_GIGA.bin Version 1.28 with telnetd (by GIGA)]


=== KMSG output ===
 {{{
# cat kmsg   
<4>************************************
<4>Powered by Realtek RTL8650B SoC, rev 1
<4>************************************
<4>SDRAM size: 16MB
<4>CPU revision is: 0000ff00
<4>Init MMU (16 entries)
<4>Primary instruction cache 0kB, linesize 0 bytes.
<4>Primary data cache 0kB, linesize 0 bytes.
<4>Linux version 2.4.26-uc0 (root@Fedora) (gcc version 3.2) #1065 Tue Oct 24 10:06:54 CST 2006
<4>Determined physical RAM map:
<4> memory: 01000000 @ 00000000 (usable)
<4>NOFS reserved @ 0x80392ca0
<4>On node 0 totalpages: 4096
<4>zone(0): 4096 pages.
<4>zone(1): 0 pages.
<4>zone(2): 0 pages.
<4>Kernel command line: root=/dev/mtdblock4
<4>IRR(0)=c0000000
<4>Calibrating delay loop... 199.06 BogoMIPS
<6>Memory: 12540k/16384k available (2641k kernel code, 3844k reserved, 112k data, 96k init, 0k highmem)
<6>Dentry cache hash table entries: 2048 (order: 2, 16384 bytes)
<6>Inode cache hash table entries: 1024 (order: 1, 8192 bytes)
<6>Mount cache hash table entries: 512 (order: 0, 4096 bytes)
<6>Buffer cache hash table entries: 1024 (order: 0, 4096 bytes)
<4>Page-cache hash table entries: 4096 (order: 2, 16384 bytes)
<4>Checking for 'wait' instruction...  unavailable.
<4>POSIX conformance testing by UNIFIX
<4>NEW PCI Driver...isLinuxCompliantEndianMode=False(Big Endian)
<4>[PCI] Reset Bridge ..... Finish!
<4>Memory Space 0 data=0xffff8000 size=0x8000
<4>PCI device exists: slot 0 function 0 VendorID 1814 DeviceID 301 bbd40000
<4>Memory Space 0 data=0xffff8000 size=0x8000
<4>PCI device exists: slot 0 function 1 VendorID 1814 DeviceID 301 bbd40100
<4>Memory Space 0 data=0xffff8000 size=0x8000
<4>PCI device exists: slot 0 function 2 VendorID 1814 DeviceID 301 bbd40200
<4>Memory Space 0 data=0xffff8000 size=0x8000
<4>PCI device exists: slot 0 function 3 VendorID 1814 DeviceID 301 bbd40300
<4>Memory Space 0 data=0xffff8000 size=0x8000
<4>PCI device exists: slot 0 function 4 VendorID 1814 DeviceID 301 bbd40400
<4>Memory Space 0 data=0xffff8000 size=0x8000
<4>PCI device exists: slot 0 function 5 VendorID 1814 DeviceID 301 bbd40500
<4>Memory Space 0 data=0xffff8000 size=0x8000
<4>PCI device exists: slot 0 function 6 VendorID 1814 DeviceID 301 bbd40600
<4>Memory Space 0 data=0xffff8000 size=0x8000
<4>PCI device exists: slot 0 function 7 VendorID 1814 DeviceID 301 bbd40700
<4>memory mapping BAnum=0 slot=0 func=0
<4>memory mapping BAnum=0 slot=0 func=1
<4>memory mapping BAnum=0 slot=0 func=2
<4>memory mapping BAnum=0 slot=0 func=3
<4>memory mapping BAnum=0 slot=0 func=4
<4>memory mapping BAnum=0 slot=0 func=5
<4>memory mapping BAnum=0 slot=0 func=6
<4>memory mapping BAnum=0 slot=0 func=7
<4>assign mem base 1bf00000~1bf07fff at bbd40010 size=32768
<4>assign mem base 1bf08000~1bf0ffff at bbd40110 size=32768
<4>assign mem base 1bf10000~1bf17fff at bbd40210 size=32768
<4>assign mem base 1bf18000~1bf1ffff at bbd40310 size=32768
<4>assign mem base 1bf20000~1bf27fff at bbd40410 size=32768
<4>assign mem base 1bf28000~1bf2ffff at bbd40510 size=32768
<4>assign mem base 1bf30000~1bf37fff at bbd40610 size=32768
<4>assign mem base 1bf38000~1bf3ffff at bbd40710 size=32768
<4>Find Total 8 PCI functions
<4>Found 00:00 [1814/0301] 000280 00
<6>Linux NET4.0 for Linux 2.4
<6>Based upon Swansea University Computer Society NET3.039
<4>Initializing RT netlink socket
<4>Starting kswapd
<6>Squashfs 2.1-r2 (released 2004/12/15) (C) 2002-2004 Phillip Lougher
<6>LZMA decompressor support based on LZMA SDK 4.05 by Oleg I.Vdovikin
<4>pty: 256 Unix98 ptys configured
<6>Serial driver version 5.05c (2001-07-08) with MANY_PORTS SERIAL_PCI enabled
<4>Probing RTL8651 home gateway controller...
<4>Initialize RTL865x ASIC and driver
<4>chip name: 8650B, chip revid: 1
<4>   Initialize mbuf...
<4>   creating default 2 interfaces...eth0 IRR(6)=c0040000
<4>===> Request IRQ 6 for eth0, ret=0
<4>IRR(7)=c0070000
<4>===> Request IRQ 7 for eth0, ret=0
<4>eth1 ...OK
<6>PPP generic driver version 2.4.2
<6>PPP BSD Compression module registered
<5>flash device: 200000 at be000000
<5> Amd/Fujitsu Extended Query Table v1.0 at 0x0040
<5>number of CFI chips: 1
<5>cfi_cmdset_0002: Disabling fast programming due to code brokenness.
<5>Creating 5 MTD partitions on "Physically mapped flash":
<5>0x00000000-0x00004000 : "boot1"
<5>0x00010000-0x00018000 : "boot2"
<5>0x00018000-0x00020000 : "boot3"
<5>0x00020000-0x000e8000 : "kernel"
<5>0x000e8000-0x00200000 : "rootfs"
<4>*RT61*<7>===> RT61_init_one
<4>pcibios_enable_resources: already enabled when device probed.
<4>*RT61*<7>Driver version-1.0.7.0
<4>pci_request_regions: PCI regions already reserved
<4>pcibios_set_master: already done when device probed.
<4>*RT61*<7>ra0: at 0x1bf38000, VA 0xbbf38000, IRQ 5. 
<4>*RT61*<7><=== RT61_init_one
<6>Initializing Cryptographic API
<6>NET4: Linux TCP/IP 1.0 for NET4.0
<6>IP Protocols: ICMP, UDP, TCP, IGMP
<6>IP: routing cache hash table of 512 buckets, 4Kbytes
<6>TCP: Hash tables configured (established 1024 bind 2048)
<6>GRE over IPv4 tunneling driver
<6>NET4: Unix domain sockets 1.0/SMP for Linux NET4.0.
<4>emulate opcode 0x25 at 800f3b54 
<4>VFS: Mounted root (squashfs filesystem) readonly.
<6>Freeing unused kernel memory: 96k freed
<4>emulate opcode 0x25 at 800f3b54 
<4>IRR(3)=c3070000
<4>===> Request IRQ 3 for serial, ret=0
<4>initial console created on /dev/ttyS1
<4>rtl8651_user_pid set to 19
<4>Bring up ext  port 6..
<4>Rx shift=10002
<4>
<4>Set IGMP Default Upstream interface (eth0) ... SUCCESS!!
<4>PPPoE Passthru disabled.
<4>Drop Unknown PPPoE PADT disabled.
<4>IPv6 Passthru disabled.
<4>IPX Passthru disabled.
<4>NETBIOS Passthru disabled.
<4>*RT61*<7>===> NICLoadFirmware
<4>*RT61*<7>NICLoadFirmware: CRC ok, ver=1.0
<4>*RT61*<7><=== NICLoadFirmware (src=/etc/Wireless/RT61AP/RT2561S.bin, status=0)
<4>*RT61*<7>--> RTMPAllocAdapterBlock
<4>*RT61*<7><-- RTMPAllocAdapterBlock
<4>*RT61*<7>--> RTMPAllocDMAMemory
<4>*RT61*<7>TxRing[0]: total 96 entry allocated
<4>*RT61*<7>TxRing[1]: total 96 entry allocated
<4>*RT61*<7>TxRing[2]: total 96 entry allocated
<4>*RT61*<7>TxRing[3]: total 96 entry allocated
<4>*RT61*<7>TxRing[4]: total 96 entry allocated
<4>*RT61*<7>MGMT Ring: total 32 entry allocated
<4>*RT61*<7>Rx Ring: total 96 entry allocated
<4>*RT61*<7><-- RTMPAllocDMAMemory
<4>*RT61*<7><--> NICInitTxRxRingAndBacklogQueue
<4>IRR(5)=c3070000
<4>===> Request IRQ 5 for ra0, ret=0
<4>*RT61*<7>--> MLME Initialize
<4>*RT61*<7><-- MLME Initialize
<4>*RT61*<7>--> PortCfgInit
<4>*RT61*<7><-- PortCfgInit
<4>*RT61*<7>--> NICInitializeAdapter
<4>*RT61*<7>--> NICInitializeAsic
<4>*RT61*<7>BBP version = 22
<4>*RT61*<7><-- NICInitializeAsic
<4>*RT61*<7><-- NICInitializeAdapter
<4>*RT61*<7>CountryRegion=5
<4>*RT61*<7>SSID[0]=Sitecom
<4>*RT61*<7>PhyMode=0
<4>*RT61*<7>I/F(ra0) TxRate=(6c,60,48,30,16,0b,04,02,00,00,00,00)
<4>*RT61*<7>Channel=11
<4>*RT61*<7>BasicRate=15
<4>*RT61*<7>BeaconPeriod=100
<4>*RT61*<7>DtimPeriod=3
<4>*RT61*<7>TxPower=100
<4>*RT61*<7>BGProtection=2
<4>*RT61*<7>OLBCDetection=0
<4>*RT61*<7>TxAntenna=1
<4>*RT61*<7>RxAntenna=
<4>*RT61*<7>TxPreamble=1
<4>*RT61*<7>RTSThreshold=2347
<4>*RT61*<7>FragThreshold=2346
<4>*RT61*<7>TxBurst=1
<4>*RT61*<7>PktAggregate=1
<4>*RT61*<7>TurboRate=1
<4>*RT61*<7>I/F(ra0) WmmCapable=0
<4>*RT61*<7>I/F(ra0) NoForwarding=0
<4>*RT61*<7>NoForwardingBTNBSSID=0
<4>*RT61*<7>I/F(ra0) HideSSID=0
<4>*RT61*<7>ShortSlot=1
<4>*RT61*<7>AutoChannelAtBootup=0
<4>*RT61*<7>IEEE8021X=0
<4>*RT61*<7>IEEE80211H=0
<4>*RT61*<7>CSPeriod=10
<4>*RT61*<7>PreAuth=1
<4>*RT61*<7>RTMPMakeRSNIE IF(ra0): RSNIE_Len[0]=8, RSNIE_Len[1]=0
<4>*RT61*<7>I/F(ra0) AuthMode=7
<4>*RT61*<7>RTMPMakeRSNIE IF(ra0): RSNIE_Len[0]=20, RSNIE_Len[1]=0
<4>*RT61*<7>I/F(ra0) EncrypType=4
<4>*RT61*<7>ReKeyMethod=2
<4>*RT61*<7>ReKeyInterval=86400
<4>*RT61*<7>PMKCachePeriod=60000
<4>*RT61*<7>I/F(ra0) WPAPSK_KEY=vdsvdxd67
<4>*RT61*<7>strong RSSI=0, CCA=0, fixed R17 at 0x41, R62=4 
<4>*RT61*<7>MlmeSetTxPreamble (= SHORT PREAMBLE)
<4>*RT61*<7>strong RSSI=0, CCA=0, fixed R17 at 0x41, R62=4 
<4>macptr - hexdump(len=8): 76 64 73 76 64 78 64 36
<4>pAd->PortCfg.MBSSID[pAd->IoctlIF].Ssid - hexdump(len=7): 53 69 74 aa 63 6f 6d
<4>keyMaterial - hexdump(len=32): 8b 30 e1 22 27 e9 71 16 1b aa cb 1a 86 13 6c 9c a1 b0 3e cf 41 d5 20 89 c3 86 94 50 66 e9 2d 11
<4>*RT61*<7>I/F(ra0) WPAPSK Key => 
<4>8b:30:e1:22:27:e9:aa:aa:aa:89:cb:1a:86:13:6c:9c:
<4>a1:b0:3e:cf:41:d5:20:89:c3:aa:94:aa:66:e9:2d:11:
<4>
<4>*RT61*<7>I/F(ra0) DefaultKeyID(0~3)=1
<4>*RT61*<7>HSCounter=0
<4>*RT61*<7>AccessPolicy0=0
<4>*RT61*<7>WDS-Enable mode=0
<4>*RT61*<7>WDS-AP(00) (0)-00:00:00:00:00:00
<4>*RT61*<7>WDS-AP(01) (0)-00:00:00:00:00:00
<4>*RT61*<7>WDS-AP(02) (0)-00:00:00:00:00:00
<4>*RT61*<7>WDS-AP(03) (0)-00:00:00:00:00:00
<4>*RT61*<7>--> NICReadEEPROMParameters
<4>*RT61*<7>MBSSID[0] MAC=00:0c:f6:xx:xx:x0
<4>*RT61*<7>MBSSID[1] MAC=00:0c:f6:xx:xx:x1
<4>*RT61*<7>MBSSID[2] MAC=00:0c:f6:xx:xx:x2
<4>*RT61*<7>MBSSID[3] MAC=00:0c:f6:xx:xx:x3
<4>*RT61*<7>E2PROM: Version = 1, FAE release #0
<4>*RT61*<7>E2PROM: G Tssi[-4 .. +4] = 255 255 255 255 - 255 -255 255 255 255, step=255, tuning=0
<4>*RT61*<7>MlmePeriodicExec: no traffic, Reset AsicBbpTuning
<4>*RT61*<7>Reset AsicBbpTuning, BBP_R62=4, OneSecFalseCCACnt=0
<4>*RT61*<7>strong RSSI=65458, CCA=0, fixed R17 at 0x41, R62=4 
<4>*RT61*<7>E2PROM: A Tssi[-4 .. +4] = 255 255 255 255 - 255 -255 255 255 255, step=255, tuning=0
<4>*RT61*<7>E2PROM: RF freq offset=0x11, RF programming seq=0
<4>*RT61*<7>TxPowerDelta Config (Delta=3, Sign=0, Enable=1)
<4>*RT61*<7><-- NICReadEEPROMParameters
<4>*RT61*<7>country code=5/0, RFIC=1, PHY mode=0, support 14 channels
<4>*RT61*<7>channel #1
<4>*RT61*<7>channel #2
<4>*RT61*<7>channel #3
<4>*RT61*<7>channel #4
<4>*RT61*<7>channel #5
<4>*RT61*<7>channel #6
<4>*RT61*<7>channel #7
<4>*RT61*<7>channel #8
<4>*RT61*<7>channel #9
<4>*RT61*<7>channel #10
<4>*RT61*<7>channel #11
<4>*RT61*<7>channel #12
<4>*RT61*<7>channel #13
<4>*RT61*<7>channel #14
<4>*RT61*<7>IF(ra0) RTMPSetPhyMode(=0)
<4>*RT61*<7>I/F(ra0) TxRate=(6c,60,48,30,16,0b,04,02,00,00,00,00)
<4>*RT61*<7>--> NICInitAsicFromEEPROM
<4>*RT61*<7>RFIC=3, LED mode=0
<4>*RT61*<7><-- NICInitAsicFromEEPROM
<4>*RT61*<7>Register WDS(virtual) interface(ra1)-00:00:00:00:00:00
<4>*RT61*<7>Register WDS(virtual) interface(ra2)-00:00:00:00:00:00
<4>*RT61*<7>Register WDS(virtual) interface(ra3)-00:00:00:00:00:00
<4>*RT61*<7>Register WDS(virtual) interface(ra4)-00:00:00:00:00:00
<4>*RT61*<7>---> ApInitialize
<4>*RT61*<7><--- ApInitialize
<4>*RT61*<7>---> ApStartUp
<4>*RT61*<7>IF(ra0) CapabilityInfo=431, WepStatus=4
<4>*RT61*<7>IF(ra0)-AP AuthMode=7, Pairwise Key Table in-used
<4>*RT61*<7>AsicRemoveSharedKeyEntry: #0 
<4>*RT61*<7>AsicRemoveSharedKeyEntry: #1 
<4>*RT61*<7>AsicRemoveSharedKeyEntry: #2 
<4>*RT61*<7>AsicRemoveSharedKeyEntry: #3 
<4>*RT61*<7>AsicSwitchChannel(RF=3, Pwr=24) to #11, R1=0x95002ccc, R2=0x9500479a, R3=0x9506b055, R4=0x950d1a0b
<4>*RT61*<7>UpdateBasicRateBitmap::(BasicRateBitMap=f)(82,84,8b,96,0c,12,18,24,30,48,60,6c)
<4>*RT61*<7>IF(ra0) MlmeUpdateTxRates (MaxDesire=54 Mbps, MaxSupport=54 Mbps, MaxTxRate=54 Mbps, Rate Switching =1)
<4>*RT61*<7> MlmeUpdateTxRates (RtsRate=11 Mbps, MlmeRate=1 Mbps, BasicRateBitmap=0x015f)
<4>*RT61*<7>MakeBssBeacon(ra0)(FrameLen=76,TimIELocateInBeacon=76,CapInfoLocateInBeacon=34)
<4>*RT61*<7>SW interrupt MCU (cmd=0x60, token=0xff, arg1,arg0=0x00,0x00)
<4>*RT61*<7>strong RSSI=65337, CCA=51, fixed R17 at 0x41, R62=4 
<4>*RT61*<7>--->AsicEnableBssSync(INFRA mode)
<4>*RT61*<7>--->Disable TSF synchronization
<4>*RT61*<7>SW interrupt MCU (cmd=0x50, token=0xff, arg1,arg0=0xff,0x20)
<4>*RT61*<7>strong RSSI=65337, CCA=4, fixed R17 at 0x41, R62=4 
<4>*RT61*<7>SW interrupt MCU (cmd=0x50, token=0xff, arg1,arg0=0xff,0x60)
<4>*RT61*<7>LOG#0 00:0c:f6:27:8a:c6 restart access point
<4>*RT61*<7><--- ApStartUp (sec_csr4=0x1)
<4>Register External Device (ra0) vid (9) extPortNum (6)
<4>Reserve port 6 for peripheral device use. (0x40)
<4>Total WLAN/WDS links: 1
<4>register external ra0 device on extPort 6, id  1
<4>ra0 -- (rtl865x_extDev_registerUcastTxDev [660]) Register Unicast Tx Device [80ec2800].
<4>(rtl865x_extDev_regCallBack [845]) Register CallBack function -- Ucast Tx (8030c018) Free (8030c26c).
<4>*RT61*<7>==> Set_Debug_Proc *******************

 }}}

=== TODO ===
 * (Integrate SSH daemon for shell access) Telnet is now implemented
 * TFTPD upload after reset
 * Recovery (JTAG, serial ...)
 * Get RTL8650B data sheet

=== Installing OpenWrt ===
Not tested. No JTAG found for recovery...RTL8650B data sheet needed.
